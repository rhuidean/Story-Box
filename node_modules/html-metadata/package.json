{
  "_args": [
    [
      {
        "raw": "git://github.com/wikimedia/html-metadata.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "git://github.com/wikimedia/html-metadata.git",
        "spec": "git://github.com/wikimedia/html-metadata.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:wikimedia/html-metadata.git",
          "sshUrl": "git+ssh://git@github.com/wikimedia/html-metadata.git",
          "httpsUrl": "git+https://github.com/wikimedia/html-metadata.git",
          "gitUrl": "git://github.com/wikimedia/html-metadata.git",
          "shortcut": "github:wikimedia/html-metadata",
          "directUrl": "https://raw.githubusercontent.com/wikimedia/html-metadata/master/package.json"
        }
      },
      "C:\\Users\\Jason\\Desktop\\Jason\\mean_portfolio\\mean_portfolio_project1"
    ]
  ],
  "_from": "git://github.com/wikimedia/html-metadata.git",
  "_id": "html-metadata@1.6.3",
  "_inCache": true,
  "_location": "/html-metadata",
  "_phantomChildren": {
    "css-select": "1.2.0",
    "dom-serializer": "0.1.0",
    "entities": "1.1.1",
    "htmlparser2": "3.9.2",
    "lodash.assignin": "4.2.0",
    "lodash.bind": "4.2.1",
    "lodash.defaults": "4.2.0",
    "lodash.filter": "4.6.0",
    "lodash.flatten": "4.4.0",
    "lodash.foreach": "4.5.0",
    "lodash.map": "4.6.0",
    "lodash.merge": "4.6.0",
    "lodash.pick": "4.4.0",
    "lodash.reduce": "4.6.0",
    "lodash.reject": "4.6.0",
    "lodash.some": "4.6.0"
  },
  "_requested": {
    "raw": "git://github.com/wikimedia/html-metadata.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "git://github.com/wikimedia/html-metadata.git",
    "spec": "git://github.com/wikimedia/html-metadata.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:wikimedia/html-metadata.git",
      "sshUrl": "git+ssh://git@github.com/wikimedia/html-metadata.git",
      "httpsUrl": "git+https://github.com/wikimedia/html-metadata.git",
      "gitUrl": "git://github.com/wikimedia/html-metadata.git",
      "shortcut": "github:wikimedia/html-metadata",
      "directUrl": "https://raw.githubusercontent.com/wikimedia/html-metadata/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git://github.com/wikimedia/html-metadata.git#d48d0e067a3d483f52abeb8220d460b190bb2efa",
  "_shasum": "2359004de687f43f540e42ad9371c35e1d2bcc1a",
  "_shrinkwrap": null,
  "_spec": "git://github.com/wikimedia/html-metadata.git",
  "_where": "C:\\Users\\Jason\\Desktop\\Jason\\mean_portfolio\\mean_portfolio_project1",
  "author": {
    "name": "Marielle Volz",
    "email": "marielle.volz@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/wikimedia/html-metadata/issues"
  },
  "contributors": [
    {
      "name": "Krzysztof Zbudniewek",
      "email": "krzysztof.zbudniewek@gmail.com"
    },
    {
      "name": "Geoffrey Mon",
      "email": "geofbot@gmail.com"
    },
    {
      "name": "Scimonster",
      "email": "tehalmightyscimonster@gmail.com"
    }
  ],
  "dependencies": {
    "bluebird": "3.4.6",
    "cheerio": "0.22.0",
    "microdata-node": "0.2.1",
    "preq": "0.5.2"
  },
  "description": "Scrapes metadata of several different standards",
  "devDependencies": {
    "istanbul": "0.4.5",
    "mocha": "3.2.0",
    "mocha-jshint": "2.3.1",
    "mocha-lcov-reporter": "1.2.0"
  },
  "gitHead": "d48d0e067a3d483f52abeb8220d460b190bb2efa",
  "homepage": "https://github.com/wikimedia/html-metadata",
  "keywords": [
    "bepress",
    "coins",
    "dublin core",
    "eprints",
    "highwire press",
    "json-ld",
    "open graph",
    "metadata",
    "microdata",
    "twitter cards",
    "web scraper"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "html-metadata",
  "optionalDependencies": {},
  "readme": "html-metadata\r\n=============\r\n\r\n# MetaData html scraper and parser for Node.js (supports Promises and callback style)\r\n\r\nThe aim of this library is to be a comprehensive source for extracting all html embedded metadata. Currently it supports Schema.org microdata using a third party library, a native BEPress, Dublin Core, Highwire Press, JSON-LD, Open Graph, Twitter, EPrints, and COinS implementation, and some general metadata that doesn't belong to a particular standard (for instance, the content of the title tag, or meta description tags).\r\n\r\nPlanned is support for RDFa, AGLS, and other yet unheard of metadata types. Contributions and requests for other metadata types welcome!\r\n\r\n## Install\r\n\r\n\tnpm install git://github.com/wikimedia/html-metadata.git\r\n\r\n## Usage\r\n\r\nPromise-based:\r\n\r\n```js\r\nvar scrape = require('html-metadata');\r\n\r\nvar url = \"http://blog.woorank.com/2013/04/dublin-core-metadata-for-seo-and-usability/\";\r\n\r\nscrape(url).then(function(metadata){\r\n\tconsole.log(metadata);\r\n});\r\n```\r\n\r\nCallback-based:\r\n\r\n```js\r\nvar scrape = require('html-metadata');\r\n\r\nvar url = \"http://blog.woorank.com/2013/04/dublin-core-metadata-for-seo-and-usability/\";\r\n\r\nscrape(url, function(error, metadata){\r\n\tconsole.log(metadata);\r\n});\r\n```\r\n\r\nThe scrape method used here invokes the parseAll() method, which uses all the available methods registered in method metadataFunctions(), and are available for use separately as well, for example:\r\n\r\nPromise-based:\r\n```js\r\nvar cheerio = require('cheerio');\r\nvar preq = require('preq'); // Promisified request library\r\nvar parseDublinCore = require('html-metadata').parseDublinCore;\r\n\r\nvar url = \"http://blog.woorank.com/2013/04/dublin-core-metadata-for-seo-and-usability/\";\r\n\r\npreq(url).then(function(response){\r\n\t$ = cheerio.load(response.body);\r\n\treturn parseDublinCore($).then(function(metadata){\r\n\t\tconsole.log(metadata);\r\n\t});\r\n});\r\n```\r\n\r\nCallback-based:\r\n```js\r\nvar cheerio = require('cheerio');\r\nvar request = require('request');\r\nvar parseDublinCore = require('html-metadata').parseDublinCore;\r\n\r\nvar url = \"http://blog.woorank.com/2013/04/dublin-core-metadata-for-seo-and-usability/\";\r\n\r\nrequest(url, function(error, response, html){\r\n\t$ = cheerio.load(html);\r\n\tparseDublinCore($, function(error, metadata){\r\n\t\tconsole.log(metadata);\r\n\t});\r\n});\r\n```\r\n\r\nOptions object:\r\n\r\nYou can also pass an [options object](https://github.com/request/request#requestoptions-callback) as the first argument containing extra parameters. Some websites require the user-agent or cookies to be set in order to get the response.\r\n\r\n```\r\nvar scrape = require('html-metadata');\r\nvar request = require('request');\r\n\r\nvar options =  {\r\n\turl: \"http://blog.woorank.com/2013/04/dublin-core-metadata-for-seo-and-usability/\",\r\n\tjar: request.jar(), // Cookie jar\r\n\theaders: {\r\n\t\t'User-Agent': 'webscraper'\r\n\t}\r\n};\r\n\r\nscrape(options, function(error, metadata){\r\n\tconsole.log(metadata);\r\n});\r\n```\r\n\r\nThe method parseGeneral obtains the following general metadata:\r\n\r\n```html\r\n<meta name=\"author\" content=\"\">\r\n<link rel=\"author\" href=\"\">\r\n<link rel=\"canonical\" href=\"\">\r\n<meta name =\"description\" content=\"\">\r\n<link rel=\"publisher\" href=\"\">\r\n<meta name =\"robots\" content=\"\">\r\n<link rel=\"shortlink\" href=\"\">\r\n<title></title>\r\n<html lang=\"en\">\r\n```\r\n\r\n## Tests\r\n\r\n```npm test``` runs the mocha tests\r\n\r\n```npm run-script coverage``` runs the tests and reports code coverage\r\n\r\n## Contributing\r\n\r\nContributions welcome! All contibutions should use [bluebird promises](https://github.com/petkaantonov/bluebird) instead of callbacks,\r\nand be .nodeify()-ed in index.js so the functions can be used as either callbacks or Promises.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wikimedia/html-metadata.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha -- -R spec",
    "test": "mocha"
  },
  "version": "1.6.3"
}
